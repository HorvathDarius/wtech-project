/*! tailwindcss v4.0.14 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-200: oklch(0.885 0.062 18.334);
    --color-red-500: oklch(0.637 0.237 25.331);
    --color-red-600: oklch(0.577 0.245 27.325);
    --color-orange-200: oklch(0.901 0.076 70.697);
    --color-orange-500: oklch(0.705 0.213 47.604);
    --color-orange-600: oklch(0.646 0.222 41.116);
    --color-green-200: oklch(0.925 0.084 155.995);
    --color-green-500: oklch(0.723 0.219 149.579);
    --color-green-600: oklch(0.627 0.194 149.214);
    --color-teal-200: oklch(0.91 0.096 180.426);
    --color-teal-500: oklch(0.704 0.14 182.503);
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-stone-200: oklch(0.923 0.003 48.717);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --font-weight-light: 300;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
    --color-primary: #DC443C;
    --color-outline: #E3DDDD;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .top-20 {
    top: calc(var(--spacing) * 20);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .row-span-1 {
    grid-row: span 1 / span 1;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .row-span-3 {
    grid-row: span 3 / span 3;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .row-start-2 {
    grid-row-start: 2;
  }
  .row-start-3 {
    grid-row-start: 3;
  }
  .row-start-4 {
    grid-row-start: 4;
  }
  .row-start-7 {
    grid-row-start: 7;
  }
  .row-start-9 {
    grid-row-start: 9;
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .m-8 {
    margin: calc(var(--spacing) * 8);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-30 {
    height: calc(var(--spacing) * 30);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-70 {
    height: calc(var(--spacing) * 70);
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-88 {
    height: calc(var(--spacing) * 88);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .w-1\/4 {
    width: calc(1/4 * 100%);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-30 {
    width: calc(var(--spacing) * 30);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .table-auto {
    table-layout: auto;
  }
  .table-fixed {
    table-layout: fixed;
  }
  .border-spacing-0 {
    --tw-border-spacing-x: calc(var(--spacing) * 0);
    --tw-border-spacing-y: calc(var(--spacing) * 0);
    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-rows-1 {
    grid-template-rows: repeat(1, minmax(0, 1fr));
  }
  .grid-rows-4 {
    grid-template-rows: repeat(4, minmax(0, 1fr));
  }
  .grid-rows-10 {
    grid-template-rows: repeat(10, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .overflow-scroll {
    overflow: scroll;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-t-md {
    border-top-left-radius: var(--radius-md);
    border-top-right-radius: var(--radius-md);
  }
  .rounded-tl-lg {
    border-top-left-radius: var(--radius-lg);
  }
  .rounded-tr-lg {
    border-top-right-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t-4 {
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
  }
  .border-green-600 {
    border-color: var(--color-green-600);
  }
  .border-orange-600 {
    border-color: var(--color-orange-600);
  }
  .border-outline {
    border-color: var(--color-outline);
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-red-600 {
    border-color: var(--color-red-600);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-green-200 {
    background-color: var(--color-green-200);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-orange-200 {
    background-color: var(--color-orange-200);
  }
  .bg-outline {
    background-color: var(--color-outline);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-red-200 {
    background-color: var(--color-red-200);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-stone-200 {
    background-color: var(--color-stone-200);
  }
  .bg-teal-200 {
    background-color: var(--color-teal-200);
  }
  .bg-teal-500 {
    background-color: var(--color-teal-500);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .text-\[\#DC443C\] {
    color: #DC443C;
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-orange-500 {
    color: var(--color-orange-500);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .sm\:col-span-1 {
    @media (width >= 40rem) {
      grid-column: span 1 / span 1;
    }
  }
  .sm\:col-span-2 {
    @media (width >= 40rem) {
      grid-column: span 2 / span 2;
    }
  }
  .sm\:col-span-3 {
    @media (width >= 40rem) {
      grid-column: span 3 / span 3;
    }
  }
  .sm\:col-span-4 {
    @media (width >= 40rem) {
      grid-column: span 4 / span 4;
    }
  }
  .sm\:col-start-1 {
    @media (width >= 40rem) {
      grid-column-start: 1;
    }
  }
  .sm\:col-start-2 {
    @media (width >= 40rem) {
      grid-column-start: 2;
    }
  }
  .sm\:col-start-3 {
    @media (width >= 40rem) {
      grid-column-start: 3;
    }
  }
  .sm\:row-span-1 {
    @media (width >= 40rem) {
      grid-row: span 1 / span 1;
    }
  }
  .sm\:row-span-2 {
    @media (width >= 40rem) {
      grid-row: span 2 / span 2;
    }
  }
  .sm\:row-start-1 {
    @media (width >= 40rem) {
      grid-row-start: 1;
    }
  }
  .sm\:row-start-2 {
    @media (width >= 40rem) {
      grid-row-start: 2;
    }
  }
  .sm\:row-start-3 {
    @media (width >= 40rem) {
      grid-row-start: 3;
    }
  }
  .sm\:row-start-4 {
    @media (width >= 40rem) {
      grid-row-start: 4;
    }
  }
  .sm\:m-4 {
    @media (width >= 40rem) {
      margin: calc(var(--spacing) * 4);
    }
  }
  .sm\:grid-cols-1 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-4 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .sm\:grid-rows-2 {
    @media (width >= 40rem) {
      grid-template-rows: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-rows-3 {
    @media (width >= 40rem) {
      grid-template-rows: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:grid-rows-4 {
    @media (width >= 40rem) {
      grid-template-rows: repeat(4, minmax(0, 1fr));
    }
  }
  .sm\:grid-rows-5 {
    @media (width >= 40rem) {
      grid-template-rows: repeat(5, minmax(0, 1fr));
    }
  }
  .sm\:gap-6 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:gap-10 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .sm\:px-10 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .lg\:col-span-1 {
    @media (width >= 64rem) {
      grid-column: span 1 / span 1;
    }
  }
  .lg\:col-span-4 {
    @media (width >= 64rem) {
      grid-column: span 4 / span 4;
    }
  }
  .lg\:col-start-1 {
    @media (width >= 64rem) {
      grid-column-start: 1;
    }
  }
  .lg\:col-start-2 {
    @media (width >= 64rem) {
      grid-column-start: 2;
    }
  }
  .lg\:col-start-4 {
    @media (width >= 64rem) {
      grid-column-start: 4;
    }
  }
  .lg\:row-span-1 {
    @media (width >= 64rem) {
      grid-row: span 1 / span 1;
    }
  }
  .lg\:row-span-2 {
    @media (width >= 64rem) {
      grid-row: span 2 / span 2;
    }
  }
  .lg\:row-span-4 {
    @media (width >= 64rem) {
      grid-row: span 4 / span 4;
    }
  }
  .lg\:row-start-1 {
    @media (width >= 64rem) {
      grid-row-start: 1;
    }
  }
  .lg\:row-start-2 {
    @media (width >= 64rem) {
      grid-row-start: 2;
    }
  }
  .lg\:row-start-3 {
    @media (width >= 64rem) {
      grid-row-start: 3;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-5 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .lg\:grid-rows-2 {
    @media (width >= 64rem) {
      grid-template-rows: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-rows-3 {
    @media (width >= 64rem) {
      grid-template-rows: repeat(3, minmax(0, 1fr));
    }
  }
}
@property --tw-border-spacing-x {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-spacing-y {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
